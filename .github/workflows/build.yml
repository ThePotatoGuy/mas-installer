name: Build

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: build

    strategy:
      matrix:
          # os: [windows-latest, macos-latest, ubuntu-latest]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libpango1.0-dev libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpng-dev libgl1-mesa-dev libglu1-mesa-dev
          sudo apt install -y --no-install-recommends libasound2-dev pkg-config

      - name: Checkout
        uses: actions/checkout@v3

      - name: Include License (non-windows)
        if: runner.os != 'Windows'
        run: curl https://raw.githubusercontent.com/Monika-After-Story/MonikaModDev/master/LICENSE.md > src/static/license.md

      - name: Include License (windows)
        if: runner.os == 'Windows'
        run: Invoke-WebRequest https://raw.githubusercontent.com/Monika-After-Story/MonikaModDev/master/LICENSE.md -O src/static/license.md

      - name: Check Build Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: target install
        if: runner.os == 'Linux'
        run: |
          rustup target add x86_64-unknown-linux-gnu

      - name: Cargo Build
        run: |
          cargo build --verbose --release --target=x86_64-unknown-linux-gnu

      - name: Upload Artifacts (non-windows)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: mas-installer-release-${{ matrix.os }}
          path: |
            target/x86_64-unknown-linux-gnu/release/mas-installer

      - name: Upload Artifacts (windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: mas-installer-release-${{ matrix.os }}
          path: |
            target/release/mas-installer.exe
